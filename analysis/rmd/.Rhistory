tally() %>%
spread(condition, n) %>%
mutate(diff = control - repeated) %>%
select(-control, -repeated) %>%
spread(Generalization, diff) %>%
ggplot(aes(x = between, y = within)) +
geom_point() +
theme_few() +
geom_abline(xintercept = 0, yintercept =0)
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated') %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(target, condition, Generalization) %>%
tally() %>%
spread(condition, n) %>%
mutate(diff = control - repeated) %>%
select(-control, -repeated) %>%
spread(Generalization, diff) %>%
ggplot(aes(x = between, y = within)) +
geom_point() +
theme_few() +
geom_abline(xintercept = 0, yintercept =0) +
theme(aspect.ratio = 1)
theme_few()
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated') %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(target, condition) %>%
tally() %>%
spread(condition, n) %>%
mutate(diff = control - repeated) %>%
select(-control, -repeated) %>%
ggplot(aes(x = diff)) +
geom_histogram() +
theme_few()
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated') %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(target, condition) %>%
tally()
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated') %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(target, condition) %>%
tally() %>%
spread(condition, n) %>%
mutate(diff = control - repeated) %>%
select(-control, -repeated) %>%
ggplot(aes(x = diff)) +
geom_histogram() +
theme_few()
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated') %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(target, condition) %>%
tally() %>%
spread(condition, n) %>%
mutate(diff = control - repeated) %>%
select(-control, -repeated)
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated') %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(target, condition) %>%
tally() %>%
spread(condition, n) %>%
mutate(diff = control - repeated)
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase == 'pre') %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(target, condition) %>%
tally() %>%
spread(condition, n) %>%
mutate(diff = control - repeated) %>%
select(-control, -repeated) %>%
ggplot(aes(x = diff)) +
geom_histogram() +
theme_few()
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase == 'pre') %>%
mutate(phase = factor(phase, levels = c('pre', 'post')))
View(rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase == 'pre') %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))))
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(gameid, target, condition) %>%
tally()
rbind(d.run3.raw, d.run4.raw)
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(gameID, target, condition)
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(gameID, target, condition) %>%
tally()
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(gameID, target, condition) %>%
tally() %>%
group_by(target,condition) %>%
tally()
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(gameID, target, condition) %>%
tally() %>%
group_by(target,condition)
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(gameID, target, condition) %>%
tally() %>%
select(-n) %>%
group_by(target,condition) %>%
tally()
d.run3.raw %>% #rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(gameID, target, condition) %>%
tally() %>%
select(-n) %>%
group_by(target,condition) %>%
tally()
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(gameID, target, condition) %>%
tally() %>%
select(-n) %>%
group_by(target,condition) %>%
tally()%>%
spread(condition, n) %>%
mutate(diff = control - repeated) %>%
select(-control, -repeated) %>%
ggplot(aes(x = diff)) +
geom_histogram() +
theme_few()
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(gameID, target, condition) %>%
tally() %>%
select(-n) %>%
group_by(target,condition) %>%
tally()%>%
spread(condition, n) %>%
mutate(diff = control - repeated) %>%
select(-control, -repeated) %>%
ggplot(aes(x = diff)) +
geom_histogram() +
theme_few()
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(gameID, target, condition) %>%
tally() %>%
select(-n) %>%
group_by(target,condition) %>%
tally()
rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(gameID, target, condition) %>%
tally() %>%
select(-n) %>%
group_by(target,condition) %>%
tally()%>%
spread(condition, n) %>%
mutate(diff = control - repeated)
d.run3.raw <- read_csv('../../results/graphical_conventions_group_data_run3_size4_waiting.csv')  %>% select(-png)
d.run3.unfiltered <- read_csv('../../results/graphical_conventions_group_data_run3_unfiltered.csv')  %>% select(-png)
d.run4.raw <- read_csv('../../results/graphical_conventions_group_data_run4_generalization.csv')  %>% select(-png)
d.run3.strict.raw <- read_csv('../../results/graphical_conventions_group_data_run3_size4_waiting_strict.csv')  %>% select(-png)
#lmer model for interaction between phase and condition (right syntax but doesn't converge)
d.run3.unfiltered %>% #rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))) %>%
group_by(gameID, target, condition) %>%
tally() %>%
select(-n) %>%
group_by(target,condition) %>%
tally()%>%
spread(condition, n) %>%
mutate(diff = control - repeated) %>%
select(-control, -repeated) %>%
ggplot(aes(x = diff)) +
geom_histogram() +
theme_few()
# geom_abline(xintercept = 0, yintercept =0) +
# theme(aspect.ratio = 1)
# facet_wrap(~ run) +
#   xlim(-20, 20)
interaction_lmm <- lmer(numStrokes ~ phase + condition + (1 + phase + condition | gameID) + (1 + phase | target), data = d.run3.raw %>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated') %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))))
summary(interaction_lmm)
#lmer model for interaction between phase and condition (right syntax but doesn't converge)
interaction_lmm <- lmer(numStrokes ~ phase * condition + (1 + phase * condition | gameID) + (1 + phase | target), data = d.run3.unfiltered %>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated'))
summary(interaction_lmm)
interaction_lmm <- lmer(numStrokes ~ phase + condition + (1 + phase + condition | gameID) + (1 + phase | target), data = d.run3.unfiltered%>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated') %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))))
summary(interaction_lmm)
interaction_lmm <- lmer(drawDuration ~ phase + condition + (1 + phase + condition | gameID) + (1 + phase | target), data = d.run3.unfiltered%>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated') %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))))
interaction_lmm <- lmer(log(drawDuration) ~ phase + condition + (1 + phase + condition | gameID) + (1 + phase | target), data = d.run3.unfiltered%>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated') %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))))
summary(interaction_lmm)
interaction_lmm <- lmer(log(drawDuration) ~ phase * condition + (1 + phase + condition | gameID) + (1 + phase | target), data = d.run3.unfiltered%>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated') %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))))
summary(interaction_lmm)
interaction_lmm <- lmer(numStrokes ~ phase * condition + (1 + phase + condition | gameID) + (1 + phase | target), data = d.run3.unfiltered%>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated') %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))))
interaction_lmm <- lmer(numStrokes ~ phase * condition + (1 + phase * condition | gameID) + (1 + phase | target), data = d.run3.unfiltered%>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated') %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))))
summary(interaction_lmm)
interaction_lmm <- lmer(numStrokes ~ phase * condition + (1 + phase * condition | gameID) + (1 + phase | target), data = rbind(d.run3.raw, d.run4.raw) %>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated') %>%
mutate(phase = factor(phase, levels = c('pre', 'post'))))
summary(interaction_lmm)
auto_corr_coef <- read_csv('../../results/graphical_conventions_auto_corr.csv')  %>% select(-png)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggthemes)
library(lme4)
library(lmerTest)
library(brms)
library(reshape2)
library(Rmisc)
d.run3.unnormalized <- read_csv('../../results/graphical_conventions_run3_unnormalized.csv')  %>% select(-png)
d.run4.unnormalized <- read_csv('../../results/graphical_conventions_run4_unnormalized.csv')  %>% select(-png)
d.run3.normalized <- read_csv('../../results/graphical_conventions_run3_normalized.csv')  %>% select(-png)
d.run4.normalized <- read_csv('../../results/graphical_conventions_run4_normalized.csv')  %>% select(-png)
d.run3.raw <- read_csv('../../results/graphical_conventions_run3_raw.csv')  %>% select(-png)
d.run4.raw <- read_csv('../../results/graphical_conventions_run4_raw.csv')  %>% select(-png)
d.unnormalized <- rbind(d.run3.unnormalized, d.run4.unnormalized)
d.normalized <- rbind(d.run3.normalized, d.run4.normalized)
d.raw <- rbind(d.run3.raw, d.run4.raw)
d.raw %>%
group_by(numStrokes) %>% ggplot(aes(x = numStrokes)) + geom_histogram()
#lmer model for effect of repetition on numstrokes
lmm <- (lmer(numStrokes ~ repetition + (1 + repetition| gameID) + (1 + repetition| target), data = d.unnormalized %>%
filter(condition == 'repeated')))
summary(lmm)
#brms model for effect of repetition on numstrokes
bmm <- brm(numStrokes ~ repetition + (1 + repetition| gameID) + (1 + repetition| target),
data = d.unnormalized %>%
filter(condition == 'repeated'), family = gaussian())
summary(bmm)
### lmer model for simplest form of interaction
interaction_simple_lmm <- lmer(numStrokes ~ phase * condition+ (1 + phase | target) + (1 + condition | gameID), data = d.run3.raw %>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated'))
summary(interaction_simple_lmm)
#lmer model for interaction between phase and condition (right syntax but doesn't converge)
interaction_lmm <- lmer(numStrokes ~ phase * condition + (1 + phase:condition | gameID) + (1 + phase | target), data = d.run3.raw %>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated'))
summary(interaction_lmm)
#brms model for interaction between phase and condition
interaction_bmm <- brm(numStrokes ~ phase * condition + (1 + phase:condition | gameID) + (1 + phase | target), data = d.run3.raw %>%
#filter(!(gameID %in% crazies.run3)) %>%
filter(phase != 'repeated'), family = poisson())
summary(interaction_bmm)
### lmer model for simplest form of interaction
interaction_simple_lmm <- lmer(numStrokes ~ phase * condition+ (1 + phase | target) + (1 + condition | gameID), data = d.unnormalized %>%
filter(phase != 'repeated'))
summary(interaction_simple_lmm)
#lmer model for interaction between phase and condition (right syntax but doesn't converge)
interaction_lmm <- lmer(numStrokes ~ phase * condition + (1 + phase:condition | gameID) + (1 + phase | target), data = d.unnormalized %>%
filter(phase != 'repeated'))
summary(interaction_lmm)
#brms model for interaction between phase and condition
interaction_bmm <- brm(numStrokes ~ phase * condition + (1 + phase:condition | gameID) + (1 + phase | target), data = d.unnormalized %>%
filter(phase != 'repeated'), family = poisson())
summary(interaction_bmm)
### lm treating everything as fixed effects
interaction_lm <- lm(numStrokes ~ phase * condition, data = d.unnormalized %>%
filter(phase != 'repeated'))
summary(interaction_lm)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggthemes)
library(lme4)
library(lmerTest)
library(brms)
library(reshape2)
library(Rmisc)
d.run3.unnormalized <- read_csv('../../results/graphical_conventions_run3_unnormalized.csv')  %>% select(-png)
d.run4.unnormalized <- read_csv('../../results/graphical_conventions_run4_unnormalized.csv')  %>% select(-png)
d.run3.normalized <- read_csv('../../results/graphical_conventions_run3_normalized.csv')  %>% select(-png)
d.run4.normalized <- read_csv('../../results/graphical_conventions_run4_normalized.csv')  %>% select(-png)
d.run3.raw <- read_csv('../../results/graphical_conventions_run3_raw.csv')  %>% select(-png)
d.run4.raw <- read_csv('../../results/graphical_conventions_run4_raw.csv')  %>% select(-png)
d.unnormalized <- rbind(d.run3.unnormalized, d.run4.unnormalized)
d.normalized <- rbind(d.run3.normalized, d.run4.normalized)
d.raw <- rbind(d.run3.raw, d.run4.raw)
d.bis.drawDuration.repeated <- read.csv('../../results/graphical_conventions_bis_score_drawDuration_repeated.csv')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggthemes)
library(lme4)
library(lmerTest)
library(brms)
library(reshape2)
library(Rmisc)
d.run3.unnormalized <- read_csv('../../results/graphical_conventions_run3_unnormalized.csv')  %>% select(-png)
d.run4.unnormalized <- read_csv('../../results/graphical_conventions_run4_unnormalized.csv')  %>% select(-png)
d.run3.normalized <- read_csv('../../results/graphical_conventions_run3_normalized.csv')  %>% select(-png)
d.run4.normalized <- read_csv('../../results/graphical_conventions_run4_normalized.csv')  %>% select(-png)
d.run3.raw <- read_csv('../../results/graphical_conventions_run3_raw.csv')  %>% select(-png)
d.run4.raw <- read_csv('../../results/graphical_conventions_run4_raw.csv')  %>% select(-png)
d.unnormalized <- rbind(d.run3.unnormalized, d.run4.unnormalized)
d.normalized <- rbind(d.run3.normalized, d.run4.normalized)
d.raw <- rbind(d.run3.raw, d.run4.raw)
d.bis.drawDuration.repeated <- read.csv('../../results/graphical_conventions_bis_score_drawDuration_repeated.csv')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggthemes)
library(lme4)
library(lmerTest)
library(brms)
library(reshape2)
library(Rmisc)
d.run3.raw <- read_csv('../../results/graphical_conventions_group_data_run3_size4_waiting.csv')  %>% select(-png)
d.run4.raw <- read_csv('../../results/graphical_conventions_group_data_run4_generalization.csv')  %>% select(-png)
d.bis.drawDuration <- read_csv('../../results/graphical_conventions_bis_score_drawDuration.csv')  %>% select(-png)
d.run3.raw <- read_csv('../../results/graphical_conventions_group_data_run3_size4_waiting.csv')  %>% select(-png)
d.run4.raw <- read_csv('../../results/graphical_conventions_group_data_run4_generalization.csv')  %>% select(-png)
d.bis.drawDuration <- read_csv('../../results/graphical_conventions_bis_score_drawDuration.csv')  %>% select(-png)
d.run3.raw <- read_csv('../../results/graphical_conventions_group_data_run3_size4_waiting.csv')  %>% select(-png)
d.run4.raw <- read_csv('../../results/graphical_conventions_group_data_run4_generalization.csv')  %>% select(-png)
d.bis.drawDuration <- read_csv('../../results/graphical_conventions_bis_score_drawDuration.csv')
d.bis.numStrokes <- read_csv('../../results/graphical_conventions_bis_score_numStrokes.csv')
View(d.bis.drawDuration)
#lmer model for interaction between repetition and condition for bis (right syntax but doesn't converge)
interaction_lmm <- lmer(bis_score ~ repetition * condition + (1 + repetition:condition | gameID), data = d.bis.drawDuration)
summary(interaction_lmm)
interaction_bmm <- brm(bis_score ~ repetition * condition + (1 + repetition:condition | gameID), data = d.bis.drawDuration, family = poisson())
interaction_bmm <- brm(bis_score ~ repetition * condition + (1 + repetition:condition | gameID), data = d.bis.drawDuration, family = gaussian())
#lmer model for interaction between repetition and condition for bis (right syntax but doesn't converge)
interaction_lmm <- lmer(bis_score ~ repetition * condition + (1 + repetition:condition | gameID), data = d.bis.drawDuration %>%
filter(repetition == 1 | repetition == 7))
summary(interaction_lmm)
d.bis.drawDuration %>%
filter(repetition == 1 | repetition == 7)
#lmer model for interaction between repetition and condition for bis (right syntax but doesn't converge)
interaction_lmm <- lmer(bis_score ~ repetition * condition + (1 + repetition:condition | gameID), data = d.bis.drawDuration %>%
filter(repetition == 0 | repetition == 7))
summary(interaction_lmm)
d.bis.drawDuration %>%
filter(repetition == 0 | repetition == 7) %>% mutate(phase = ifelse(repetition == 0, 'pre', 'post'))
#lmer model for interaction between repetition and condition for bis (right syntax but doesn't converge)
interaction_lmm <- lmer(bis_score ~ phase * condition + (1 + repetition:condition | gameID), data = d.bis.drawDuration %>%
filter(repetition == 0 | repetition == 7) %>% mutate(phase = ifelse(repetition == 0, 'pre', 'post')))
summary(interaction_lmm)
predict(interaction_lmm)
#lmer model for interaction between repetition and condition for bis (right syntax but doesn't converge)
interaction_lmm <- lmer(bis_score ~ phase * condition + (1 + phase:condition | gameID), data = d.bis.drawDuration %>%
filter(repetition == 0 | repetition == 7) %>% mutate(phase = ifelse(repetition == 0, 'pre', 'post')))
#lmer model for interaction between repetition and condition for bis (right syntax but doesn't converge)
interaction_lmm <- lmer(bis_score ~ phase * condition + (1 + phase:condition | gameID), data = d.bis.drawDuration %>%
filter(repetition == 0 | repetition == 7) %>% mutate(phase = ifelse(repetition == 0, 'pre', 'post')))
#lmer model for interaction between repetition and condition for bis (right syntax but doesn't converge)
interaction_lmm <- lmer(bis_score ~ phase * condition + (1 + phase:condition | gameID), data = d.bis.drawDuration %>%
filter(repetition == 0 | repetition == 7) %>% mutate(phase = ifelse(repetition == 0, 'pre', 'post')))
#lmer model for interaction between repetition and condition for bis (right syntax but doesn't converge)
interaction_lmm <- lmer(bis_score ~ phase * condition + (1 + phase | gameID), data = d.bis.drawDuration %>%
filter(repetition == 0 | repetition == 7) %>% mutate(phase = ifelse(repetition == 0, 'pre', 'post')))
summary(interaction_lmm)
predict(interaction_lmm)
#lmer model for interaction between repetition and condition for bis (right syntax but doesn't converge)
interaction_lmm <- lmer(bis_score ~ phase * condition + (1 + phase*condition | gameID), data = d.bis.drawDuration %>%
filter(repetition == 0 | repetition == 7) %>% mutate(phase = ifelse(repetition == 0, 'pre', 'post')))
#lmer model for interaction between repetition and condition for bis (right syntax but doesn't converge)
interaction_lmm <- lmer(bis_score ~ phase * condition + (1 + phase*condition | gameID), data = d.bis.drawDuration %>%
filter(repetition == 0 | repetition == 7) %>% mutate(phase = ifelse(repetition == 0, 'pre', 'post')))
summary(interaction_lmm)
#lmer model for interaction between repetition and condition for bis (right syntax but doesn't converge)
interaction_lmm <- lmer(bis_score ~ phase * condition + (1 + phase*condition | gameID), data = d.bis.drawDuration %>%
filter(repetition == 0 | repetition == 7) %>% mutate(phase = ifelse(repetition == 0, 'pre', 'post')))
#lmer model for interaction between repetition and condition for bis (right syntax but doesn't converge)
interaction_lmm <- lmer(bis_score ~ phase * condition + (1 + phase*condition | gameID), data = d.bis.drawDuration %>%
filter(repetition == 0 | repetition == 7) %>% mutate(phase = ifelse(repetition == 0, 'pre', 'post')))
summary(interaction_lmm)
predict(interaction_lmm)
d.run3.raw <- read_csv('../../results/graphical_conventions_group_data_run3_size4_waiting.csv')  %>% select(-png)
d.run4.raw <- read_csv('../../results/graphical_conventions_group_data_run4_generalization.csv')  %>% select(-png)
d.bis.drawDuration <- read_csv('../../results/graphical_conventions_bis_score_drawDuration.csv')
d.bis.numStrokes <- read_csv('../../results/graphical_conventions_bis_score_numStrokes.csv')
d.run3.raw <- read_csv('../../results/graphical_conventions_group_data_run3_size4_waiting.csv')  %>% select(-png)
d.run4.raw <- read_csv('../../results/graphical_conventions_group_data_run4_generalization.csv')  %>% select(-png)
d.bis.drawDuration <- read_csv('../../results/graphical_conventions_bis_score_drawDuration.csv')
d.bis.numStrokes <- read_csv('../../results/graphical_conventions_bis_score_numStrokes.csv')
#lmer model for interaction between repetition and condition for bis (right syntax but doesn't converge)
interaction_lmm <- lmer(bis_score ~ phase * condition + (1 + phase*condition | gameID) + (1 + phase:condition | target), data = d.bis.drawDuration %>%
filter(repetition == 0 | repetition == 7) %>% mutate(phase = ifelse(repetition == 0, 'pre', 'post')))
summary(interaction_lmm)
ggplot(data=d.bis.drawDuration %>% filter(condition == 'repeated'), aes(x=repetition, y=bis_score, group=gameID))
ggplot(data=d.bis.drawDuration %>% filter(condition == 'repeated'), aes(x=repetition, y=bis_score, group=gameID)) + geom_line()
ggplot(data=d.bis.drawDuration %>% filter(condition == 'repeated'), aes(x=repetition, y=bis_score, group=gameID))
+ stat_summary(geom="ribbon", fun.data=mean_cl_normal, width=0.1, conf.int=0.95, fill="lightblue")+
stat_summary(geom="line", fun.y=mean, linetype="dashed")+
stat_summary(geom="point", fun.y=mean, color="red")
# + stat_summary(geom="ribbon", fun.data=mean_cl_normal, width=0.1, conf.int=0.95, fill="lightblue")+
#  stat_summary(geom="line", fun.y=mean, linetype="dashed")+
#  stat_summary(geom="point", fun.y=mean, color="red")
# + stat_summary(geom="ribbon", fun.data=mean_cl_normal, width=0.1, conf.int=0.95, fill="lightblue")+
#  stat_summary(geom="line", fun.y=mean, linetype="dashed")+
#  stat_summary(geom="point", fun.y=mean, color="red")
p
ggplot(data=d.bis.drawDuration %>% filter(condition == 'repeated'), aes(x=repetition, y=bis_score, group=gameID)) + geom_line() +geom_ribbon(aes(ymin=data$lower, ymax=data$upper), linetype=2, alpha=0.1)
ggplot(data=d.bis.drawDuration %>% filter(condition == 'repeated'), aes(x=repetition, y=bis_score, group=gameID)) + geom_line() + geom_ribbon(aes(ymin=data$lower, ymax=data$upper), linetype=2, alpha=0.1)
d.bis.drawDuration.repeated <- d.bis.drawDuration %>% filter(condition == 'repeated')
ggplot(data=d.bis.drawDuration.repeated, aes(x=repetition, y=bis_score, group=gameID)) + geom_line() + geom_ribbon(aes(ymin=d.bis.drawDuration.repeated$lower, ymax=d.bis.drawDuration.repeated$upper), linetype=2, alpha=0.1)
d.bis.drawDuration.repeated <- d.bis.drawDuration %>% filter(condition == 'repeated')
ggplot(data=d.bis.drawDuration.repeated, aes(x=repetition, y=bis_score)) + geom_line() + geom_ribbon(aes(ymin=d.bis.drawDuration.repeated$lower, ymax=d.bis.drawDuration.repeated$upper), linetype=2, alpha=0.1)
#d.bis.drawDuration.repeated <- d.bis.drawDuration %>% filter(condition == 'repeated')
#ggplot(data=d.bis.drawDuration.repeated, aes(x=repetition, y=bis_score)) + geom_line() + geom_ribbon(aes(ymin=d.bis.drawDuration.repeated$lower, #ymax=d.bis.drawDuration.repeated$upper), linetype=2, alpha=0.1)
# + stat_summary(geom="ribbon", fun.data=mean_cl_normal, width=0.1, conf.int=0.95, fill="lightblue")+
#  stat_summary(geom="line", fun.y=mean, linetype="dashed")+
#  stat_summary(geom="point", fun.y=mean, color="red")
d.bis.drawDuration %>%
filter(condition == 'repeated') %>%
group_by(repetition) %>%
summarize(bis_mean = mean(bis_score)) %>%
ggplot(aes(x=repetition, y=bis_mean)) +
geom_point() +
theme_few() +
geom_hline(yintercept = 0.25, linetype = 2) +
guides(color = FALSE) +
geom_smooth(method = 'loess') +
ylab("BIS") +
ylim(-1,1)
View(d.bis.drawDuration)
d.bis.drawDuration %>%
filter(condition == 'repeated') %>%
group_by(trialNum) %>%
summarize(bis_mean = mean(bis_score)) %>%
ggplot(aes(x=repetition, y=bis_mean)) +
geom_point() +
theme_few() +
geom_hline(yintercept = 0.25, linetype = 2) +
guides(color = FALSE) +
geom_smooth(method = 'loess') +
ylab("BIS") +
ylim(-1,1)
d.bis.drawDuration %>%
filter(condition == 'repeated') %>%
group_by(trialNum) %>%
summarize(bis_mean = mean(bis_score)) %>%
ggplot(aes(x=repetition, y=bis_mean)) +
geom_point() +
theme_few() +
geom_hline(yintercept = 0.25, linetype = 2) +
guides(color = FALSE) +
geom_smooth(method = 'loess') +
ylab("BIS") +
ylim(-1,1)
d.bis.drawDuration %>%
filter(condition == 'repeated') %>%
#group_by(trialNum) %>%
summarize(bis_mean = mean(bis_score)) %>%
ggplot(aes(x=repetition, y=bis_mean)) +
geom_point() +
theme_few() +
geom_hline(yintercept = 0.25, linetype = 2) +
guides(color = FALSE) +
geom_smooth(method = 'loess') +
ylab("BIS") +
ylim(-1,1)
#lmer model for interaction between repetition and condition for bis (right syntax but doesn't converge)
interaction_lmm <- lmer(bis_score ~ phase * condition + (1 + phase*condition | gameID) + (1 + phase*condition | target), data = d.bis.drawDuration %>%
filter(repetition == 0 | repetition == 7) %>% mutate(phase = ifelse(repetition == 0, 'pre', 'post')))
summary(interaction_lmm)
coef(summary(interaction_lmm))
#lmer model for interaction between repetition and condition for bis (right syntax but doesn't converge)
interaction_lmm <- lmer(bis_score ~ phase * condition + (1 + phase*condition | gameID) + (1 + phase*condition | target), data = d.bis.drawDuration %>%
filter(repetition == 0 | repetition == 7) %>% mutate(phase = ifelse(repetition == 0, 'pre', 'post'))) %>% mutate(phase = ordered(phase, levels = c('pre', 'post')))
#lmer model for interaction between repetition and condition for bis (right syntax but doesn't converge)
interaction_lmm <- lmer(bis_score ~ phase * condition + (1 + phase*condition | gameID) + (1 + phase*condition | target), data = d.bis.drawDuration %>%
filter(repetition == 0 | repetition == 7) %>% mutate(phase = ifelse(repetition == 0, 'pre', 'post')))
summary(interaction_lmm)
install.packages('tidyboot')
